version: '2'
services:
  ros-master:
    image: frankjoshua/ros-master
    ports:
      - "11311:11311"
    env_file:
      - ros.env
    network_mode: "host"
    restart: unless-stopped
    command: bash -c "roscore && rosparm set use_sim_time true && fg"

  # web-server:
  #   image: schoeffm/rpi-nginx-php5
  #   network_mode: "host"
  #   privileged: true
  #   restart: unless-stopped
  #   volumes:
  #     - $HOME/gobbit/blockly:/usr/share/nginx/www

  # ros-rosbridge-server:
  #   image: frankjoshua/ros-rpi-rosbridge-server
  #   ports:
  #     - "9090:9090"
  #   env_file:
  #     - ros.env
  #   network_mode: "host"
  #   restart: unless-stopped

#  ros-web-video-server:
#    image: frankjoshua/ros-rpi-web-video-server
#    env_file:
#      - ros.env
#    network_mode: "host"
#    restart: unless-stopped

  ros-gobbit-description:
    image: frankjoshua/ros-gobbit-description
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - $HOME/gobbit/docker_ros_nodes/description/model.urdf.xacro:/model.urdf.xacro
      - $HOME/gobbit/docker_ros_nodes/description/description.launch:/description.launch
    env_file:
      - ros.env
    network_mode: "host"
    restart: unless-stopped

  # ros-diff-drive:
  #   image: frankjoshua/ros-diff-drive
  #   env_file:
  #     - ros.env
  #   network_mode: "host"
  #   restart: unless-stopped
  #
  # ros-gps-nav:
  #   image: frankjoshua/ros-gps-nav-node
  #   env_file:
  #     - ros.env
  #   volumes:
  #     - "$HOME/gobbit/docker_ros_nodes/gps_nav/node.py:/node.py"
  #   network_mode: "host"
  #   restart: unless-stopped

  ros-hector-mapping:
    image: frankjoshua/ros-hector-mapping
    volumes:
      - $HOME/gobbit/docker_ros_nodes/hector_mapping/ros.launch:/ros.launch
    env_file:
      - ros.env
    network_mode: "host"
    restart: unless-stopped

  ros-move-base:
    image: frankjoshua/ros-move-base
    env_file:
      - ros.env
    volumes:
      - $HOME/gobbit/docker_ros_nodes/move_base/ros.launch:/ros.launch
      - $HOME/gobbit/docker_ros_nodes/move_base/base_local_planner_params.yaml:/base_local_planner_params.yaml
      - $HOME/gobbit/docker_ros_nodes/move_base/costmap_common_params.yaml:/costmap_common_params.yaml
      - $HOME/gobbit/docker_ros_nodes/move_base/global_costmap_params.yaml:/global_costmap_params.yaml
      - $HOME/gobbit/docker_ros_nodes/move_base/local_costmap_params.yaml:/local_costmap_params.yaml
    network_mode: "host"
    restart: unless-stopped

  # ros-line-follower:
  #   image: frankjoshua/ros-rpi-line-follower
  #   env_file:
  #     - ros.env
  #   network_mode: "host"
  #   restart: unless-stopped

################## HARDWARE #####################

  # ros-arduino-serial:
  #   image: frankjoshua/ros-arduino-serial
  #   env_file:
  #     - ros.env
  #   privileged: true
  #   network_mode: "host"
  #   volumes:
  #     - /dev/ttyACM0:/dev/arduino_motor
  #   restart: unless-stopped

  # ros-xv-11-laser:
  #   image: frankjoshua/docker_ros_xv_11
  #   devices:
  #     - "/dev/ttyACM0:/dev/laser_port"
  #   env_file:
  #     - ros.env
  #   network_mode: "host"
  #   restart: unless-stopped

  # ros-ultimate-hat-node:
  #   image: frankjoshua/ros-rpi-ultimate-hat-node
  #   cap_add:
  #     - SYS_RAWIO
  #   devices:
  #     - "/dev/mem:/dev/mem"
  #     - "/lib/modules:/lib/modules"
  #     - "/dev/i2c-1:/dev/i2c-1"
  #   volumes:
  #     - "$HOME/gobbit/ultimate_hat_node/node.py:/node.py"
  #   privileged: true
  #   env_file:
  #     - ros.env
  #   network_mode: "host"
  #   restart: unless-stopped

  # ros-linedog:
  #   image: frankjoshua/ros-rpi-linedog-node
  #   cap_add:
  #     - SYS_RAWIO
  #   devices:
  #     - "/dev/mem:/dev/mem"
  #     - "/lib/modules:/lib/modules"
  #     - "/dev/i2c-1:/dev/i2c-1"
  #   volumes:
  #     - "/home/pirate/gobbit/linedog_node/node.py:/node.py"
  #   privileged: true
  #   env_file:
  #     - ros.env
  #   network_mode: "host"
  #   restart: unless-stopped

  # ros-oled-display:
  #   image: frankjoshua/ros-rpi-oled-display
  #   cap_add:
  #     - SYS_RAWIO
  #   devices:
  #     - "/dev/mem:/dev/mem"
  #     - "/lib/modules:/lib/modules"
  #     - "/dev/i2c-1:/dev/i2c-1"
  #   privileged: true
  #   env_file:
  #     - ros.env
  #   network_mode: "host"
  #   restart: unless-stopped

################## DISABLED #####################
  # ros-user-code:
  #   image: frankjoshua/ros-rpi-user-code-node
  #   env_file:
  #     - ros.env
  #   network_mode: "host"
  #   restart: always
  #   volumes:
  #     - /home/pirate/gobbit/blockly/combined_code.py:/usr/share/nginx/www

  # ros-usb-cam:
  #   image: frankjoshua/ros-rpi-usb-cam
  #   devices:
  #     - "/dev/video0:/dev/video0"
  #   privileged: true
  #   env_file:
  #     - ros.env
  #   network_mode: "host"
  #   restart: unless-stopped

  # ui:
  #   image: portainer/portainer:arm
  #   restart: unless-stopped
  #   volumes:
  #     - '/var/run/docker.sock:/var/run/docker.sock'
  #   expose:
  #     - 9000
  #   ports:
  #     - 9000:9000
