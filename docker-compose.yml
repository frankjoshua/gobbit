version: '3'
services:

############################ ALL ############################

  ros-master:
    image: "frankjoshua/ros-master:${ARCH:-latest}"
    build: ./docker_ros_nodes/ros-master
    volumes:
      - $HOME/ros:/root/.ros
    env_file:
      - ros.env
    network_mode: "host"
    restart: unless-stopped

  # web-server:
  #   image: schoeffm/rpi-nginx-php5
  #   network_mode: "host"
  #   privileged: true
  #   restart: unless-stopped
  #   volumes:
  #     - $HOME/gobbit/blockly:/usr/share/nginx/www

  # ros-rosbridge-server:
  #   image: frankjoshua/ros-rpi-rosbridge-server
  #   ports:
  #     - "9090:9090"
  #   env_file:
  #     - ros.env
  #   network_mode: "host"
  #   restart: unless-stopped

#  ros-web-video-server:
#    image: frankjoshua/ros-rpi-web-video-server
#    env_file:
#      - ros.env
#    network_mode: "host"
#    restart: unless-stopped

  # ros-gobbit-description:
  #   image: "frankjoshua/ros-gobbit-description:${ARCH:-latest}"
  #   build: ./docker_ros_nodes/ros-gobbit-description
  #   volumes:
  #     - /etc/localtime:/etc/localtime:ro
  #     - $HOME/gobbit/docker_ros_nodes/ros-gobbit-description/model.urdf.xacro:/model.urdf.xacro
  #     - $HOME/gobbit/docker_ros_nodes/ros-gobbit-description/description.launch:/description.launch
  #   env_file:
  #     - ros.env
  #   network_mode: "host"
  #   restart: unless-stopped
  
  ros-efim-description:
    image: "frankjoshua/ros-efim-description:${ARCH:-latest}"
    build: ./docker_ros_nodes/ros-efim-description
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - $HOME/gobbit/docker_ros_nodes/ros-efim-description/model.urdf.xacro:/model.urdf.xacro
      - $HOME/gobbit/docker_ros_nodes/ros-efim-description/ros.launch:/ros.launch
    env_file:
      - ros.env
    network_mode: "host"
    restart: unless-stopped
    
  ros-vel-muxer:
    image: "frankjoshua/ros-vel-muxer:${ARCH:-latest}"
    build: ./docker_ros_nodes/ros-vel-muxer
    volumes:
      - $HOME/gobbit/docker_ros_nodes/ros-vel-muxer/node.py:/node.py
    env_file:
      - ros.env
    network_mode: "host"
    command: python /node.py --computer_topic /cmd_vel/computer --manual_topic /pocketbot/cmd_vel --output_topic /cmd_vel --delay 5 -x 0.2 -z 0.2
    
  # ros-diff-drive:
  #   image: "frankjoshua/ros-diff-drive:${ARCH:-latest}"
  #   build: ./docker_ros_nodes/ros-diff-drive
  #   volumes:
  #     - $HOME/gobbit/docker_ros_nodes/ros-diff-drive/ros.launch:/ros.launch
  #   env_file:
  #     - ros.env
  #   network_mode: "host"
  #   restart: unless-stopped

  # ros-gps-nav:
  #   image: "frankjoshua/ros-gps-nav-node:${ARCH:-latest}"
  #   build: ./docker_ros_nodes/ros-gps-nav-node
  #   env_file:
  #     - ros.env
  #   volumes:
  #     - $HOME/gobbit/docker_ros_nodes/ros-gps-nav-node/node.py:/node.py
  #   network_mode: "host"
  #   restart: unless-stopped



############################ MAPPING ############################

  # ros-map-server:
  #   image: "frankjoshua/ros-map-server:${ARCH:-latest}"
  #   build: ./docker_ros_nodes/ros-map-server
  #   volumes:
  #     - $HOME/gobbit/docker_ros_nodes/ros-map-server/map.yaml:/map.yaml
  #     - $HOME/gobbit/docker_ros_nodes/ros-map-server/map.2048.pgm:/map.2048.pgm
  #     - $HOME/gobbit/docker_ros_nodes/ros-map-server/map.512.png:/map.512.png
  #     - $HOME/gobbit/docker_ros_nodes/ros-map-server/ros.launch:/ros.launch
  #   env_file:
  #     - ros.env
  #   network_mode: "host"
  #   restart: unless-stopped

  # ros-gmapping:
  #   image: frankjoshua/ros-gmapping
  #   volumes:
  #     - $HOME/gobbit/docker_ros_nodes/gmapping/ros.launch:/ros.launch
  #   env_file:
  #     - ros.env
  #   network_mode: "host"
  #   restart: unless-stopped
  
  ros-hector-mapping:
    image: "frankjoshua/ros-hector-mapping:${ARCH:-latest}"
    build: ./docker_ros_nodes/ros-hector-mapping
    volumes:
      - $HOME/gobbit/docker_ros_nodes/ros-hector-mapping/ros.launch:/ros.launch
    env_file:
      - ros.env
    network_mode: "host"
    restart: unless-stopped
  
  ros-rtab-map:
    image: "frankjoshua/ros-rtab-map:${ARCH:-latest}"
    build: ./docker_ros_nodes/ros-rtab-map
    volumes:
      - $HOME/gobbit/docker_ros_nodes/ros-rtab-map/ros.launch:/ros.launch
    env_file:
      - ros.env
    network_mode: "host"
    restart: unless-stopped
    
  # ros-cartographer:
  #   image: "frankjoshua/ros-cartographer:${ARCH:-latest}"
  #   build: ./docker_ros_nodes/ros-cartographer
  #   volumes:
  #     - $HOME/gobbit/docker_ros_nodes/ros-cartographer/ros.launch:/ros.launch
  #     - $HOME/gobbit/docker_ros_nodes/ros-cartographer/settings.lua:/settings.lua
  #   env_file:
  #     - ros.env
  #   network_mode: "host"
  #   restart: unless-stopped

  # ros-robot-localization:
  #   image: frankjoshua/ros-robot-localization
  #   volumes:
  #     - $HOME/gobbit/docker_ros_nodes/robot_localization/ros.launch:/ros.launch
  #     - $HOME/gobbit/docker_ros_nodes/robot_localization/params.yaml:/params.yaml
  #   env_file:
  #     - ros.env
  #   network_mode: "host"
  #   restart: unless-stopped

  ros-move-base:
    image: "frankjoshua/ros-move-base:${ARCH:-latest}"
    build: ./docker_ros_nodes/ros-move-base
    env_file:
      - ros.env
    volumes:
      - $HOME/gobbit/docker_ros_nodes/ros-move-base/ros.launch:/ros.launch
      - $HOME/gobbit/docker_ros_nodes/ros-move-base/base_local_planner_params.yaml:/base_local_planner_params.yaml
      - $HOME/gobbit/docker_ros_nodes/ros-move-base/costmap_common_params.yaml:/costmap_common_params.yaml
      - $HOME/gobbit/docker_ros_nodes/ros-move-base/global_costmap_params.yaml:/global_costmap_params.yaml
      - $HOME/gobbit/docker_ros_nodes/ros-move-base/local_costmap_params.yaml:/local_costmap_params.yaml
    network_mode: "host"
    restart: unless-stopped

############################ LINE FOLLOWER ############################

  # ros-line-follower:
  #   image: frankjoshua/ros-rpi-line-follower
  #   env_file:
  #     - ros.env
  #   network_mode: "host"
  #   restart: unless-stopped
    
  # ros-opencv-line:
  #   image: "frankjoshua/ros-opencv-line:${ARCH:-latest}"
  #   build: ./docker_ros_nodes/ros-opencv-line
  #   volumes:
  #     - $HOME/gobbit/docker_ros_nodes/ros-opencv-line/node.py:/node.py
  #   env_file:
  #     - ros.env
  #   network_mode: "host"
  #   restart: unless-stopped



################## DISABLED #####################
  # ros-user-code:
  #   image: frankjoshua/ros-rpi-user-code-node
  #   env_file:
  #     - ros.env
  #   network_mode: "host"
  #   restart: always
  #   volumes:
  #     - /home/pirate/gobbit/blockly/combined_code.py:/usr/share/nginx/www

  # ui:
  #   image: portainer/portainer:arm
  #   restart: unless-stopped
  #   volumes:
  #     - '/var/run/docker.sock:/var/run/docker.sock'
  #   expose:
  #     - 9000
  #   ports:
  #     - 9000:9000
